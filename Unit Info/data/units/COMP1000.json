{
  "data": {
    "grading_schema": {
      "label": "Graded",
      "value": "graded"
    },
    "study_level": {},
    "quota_enrolment_requirements": "",
    "exclusions": "",
    "level": {
      "value": "1000"
    },
    "uac_code": "",
    "special_requirements": "",
    "special_unit_type": [
      {
        "label": "Undergraduate",
        "value": "undergrad"
      }
    ],
    "version_status": {
      "label": "Approved",
      "value": "Active"
    },
    "special_topic": false,
    "asced_broad": {
      "value": ""
    },
    "placement_proportion": {
      "label": "No",
      "value": "no"
    },
    "unit_description": [],
    "unit_learning_outcomes": [
      {
        "description": "design and write code to implement a program description in an imperative programming language",
        "code": "ULO2"
      },
      {
        "description": "use standard software engineering practices to document, debug and test their programs",
        "code": "ULO3"
      },
      {
        "description": "apply problem solving skills to develop algorithms that solve small to medium-sized computational problems",
        "code": "ULO1"
      },
      {
        "description": "understand and apply appropriately the concepts of variables, loops, functions, conditionals and compound data in the implementation of programmed systems",
        "code": "ULO4"
      },
      {
        "description": "identify and describe ethical issues in an academic environment and demonstrate active engagement in the learning process",
        "code": "ULO5"
      }
    ],
    "non_scheduled_learning_activities": [
      {
        "description": "",
        "activity": {
          "label": "Class Preparation",
          "value": "class_preparation"
        },
        "offerings": ""
      }
    ],
    "enrolment_rules": [
      {
        "description": "COMP115",
        "type": {
          "label": "NCCW (pre-2020 units)",
          "value": "nccw"
        }
      }
    ],
    "assessments": [
      {
        "assessment_title": "Major Creative Work",
        "type": {
          "label": "Programming Task",
          "value": "programming_task"
        },
        "weight": "40",
        "description": "A semester-long programming task where students put all their skills to work creating a game or demo.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      },
      {
        "assessment_title": "Module Exams",
        "type": {
          "label": "Examination",
          "value": "exam"
        },
        "weight": "60",
        "description": "A number of exams spread through the semester. Students will have the opportunity to repeat any exam to improve their mark. ",
        "applies_to_all_offerings": "No",
        "hurdle_task": "Yes",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      }
    ],
    "requisites": [],
    "unit_offering": [
      {
        "publish": "true",
        "name": "COMP1000-unit_teaching_period-Weekday-subject",
        "display_name": "Session 2-Weekday-North Ryde",
        "teaching_period": {
          "value": "Session 2"
        },
        "attendance_mode": {
          "value": "Weekday attendance"
        },
        "quota_number": "",
        "study_level": {},
        "academic_item": {
          "value": "COMP1000"
        }
      },
      {
        "publish": "true",
        "name": "COMP1000-unit_teaching_period-Special",
        "display_name": "Session 2-Special",
        "teaching_period": {
          "value": "Session 2"
        },
        "attendance_mode": {
          "value": "Special circumstances"
        },
        "quota_number": "",
        "study_level": {},
        "academic_item": {
          "value": "COMP1000"
        }
      },
      {
        "publish": "true",
        "name": "COMP1000-unit_teaching_period-Weekday-subject",
        "display_name": "Session 1-Weekday-North Ryde",
        "teaching_period": {
          "value": "Session 1"
        },
        "attendance_mode": {
          "value": "Weekday attendance"
        },
        "quota_number": "",
        "study_level": {},
        "academic_item": {
          "value": "COMP1000"
        }
      },
      {
        "publish": "true",
        "name": "COMP1000-unit_teaching_period-Special",
        "display_name": "Session 1-Special",
        "teaching_period": {
          "value": "Session 1"
        },
        "attendance_mode": {
          "value": "Special circumstances"
        },
        "quota_number": "",
        "study_level": {},
        "academic_item": {
          "value": "COMP1000"
        }
      }
    ],
    "unit_offering_text": "Session 1, Weekday attendance, North Ryde<br />Session 2, Weekday attendance, North Ryde<br />Session 2, Special circumstances<br />Session 1, Special circumstances<br />",
    "subject_search_title": "COMP1000 - Introduction to Computer Programming",
    "status": {
      "label": "Approved",
      "value": "Active"
    },
    "academic_org": {
      "value": "Department of Computing "
    },
    "school": {
      "value": "Faculty of Science and Engineering"
    },
    "credit_points": "10",
    "type": {
      "label": "",
      "value": "non_pace"
    },
    "description": "This unit is an introductory computer science unit, providing a practical introduction to basic computing and programming concepts. Students gain an understanding of, and practical experience in, computer programming; practical experience in implementing informal prose descriptions of problem solutions using an imperative language; an understanding of, and practical experience in, designing, coding, testing and debugging simple algorithms; and an understanding of the principle of incremental development. Other topics include: the concept of program correctness; the differences between high-level languages, assembly languages and machine languages; the role played by compilers; and the execution of programs by computer hardware.",
    "search_title": "COMP1000 - Introduction to Computer Programming",
    "code": "COMP1000",
    "title": "Introduction to Computer Programming",
    "content_type": "Unit",
    "credit_points_header": "10 credit points"
  },
  "creditPoints": 10,
  "description": "This unit is an introductory computer science unit, providing a practical introduction to basic computing and programming concepts. Students gain an understanding of, and practical experience in, computer programming; practical experience in implementing informal prose descriptions of problem solutions using an imperative language; an understanding of, and practical experience in, designing, coding, testing and debugging simple algorithms; and an understanding of the principle of incremental development. Other topics include: the concept of program correctness; the differences between high-level languages, assembly languages and machine languages; the role played by compilers; and the execution of programs by computer hardware.",
  "level": "1000",
  "publishedInHandbook": 1,
  "levelDisplay": "Unit",
  "effectiveDate": "2021-01-01T00:00:00",
  "status": "Active",
  "modDate": "2020-12-04T11:44:13.867",
  "code": "COMP1000",
  "title": "Introduction to Computer Programming",
  "implementationYear": "2021"
}