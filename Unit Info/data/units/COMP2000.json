{
  "data": {
    "grading_schema": {
      "label": "Graded",
      "value": "graded"
    },
    "study_level": {},
    "quota_enrolment_requirements": "",
    "exclusions": "",
    "level": {
      "value": "2000"
    },
    "uac_code": "",
    "special_requirements": "",
    "special_unit_type": [
      {
        "label": "Undergraduate",
        "value": "undergrad"
      }
    ],
    "version_status": {
      "label": "Approved",
      "value": "Active"
    },
    "special_topic": false,
    "asced_broad": {
      "value": ""
    },
    "placement_proportion": {
      "label": "No",
      "value": "no"
    },
    "unit_description": [],
    "unit_learning_outcomes": [
      {
        "description": "apply the concepts underlying software design and a working knowledge of a selection of well known design patterns",
        "code": "ULO2"
      },
      {
        "description": "apply key concepts of concurrency theoretically and in working code",
        "code": "ULO5"
      },
      {
        "description": "demonstrate good programming practices such as testing, debugging, documentation, version control, programming tools and interactive development environments",
        "code": "ULO3"
      },
      {
        "description": "apply key object oriented concepts and libraries to design and develop applications of significant complexity",
        "code": "ULO4"
      },
      {
        "description": "explain the key concepts of object oriented programming, and program proficiently in an OO programming language",
        "code": "ULO1"
      }
    ],
    "non_scheduled_learning_activities": [],
    "enrolment_rules": [
      {
        "description": "COMP1010 or COMP125",
        "type": {
          "label": "Pre-requisite",
          "value": "prerequisite"
        }
      },
      {
        "description": "COMP229",
        "type": {
          "label": "NCCW (pre-2020 units)",
          "value": "nccw"
        }
      }
    ],
    "assessments": [
      {
        "assessment_title": "Module Examinations",
        "type": {
          "label": "Examination",
          "value": "exam"
        },
        "weight": "44",
        "description": "On three occasions during semester and once in the final exam period students sit a module examination. The three in-semester exams are run in practical workshops and each offers a different exam.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      },
      {
        "assessment_title": "Assignment One",
        "type": {
          "label": "Programming Task",
          "value": "programming_task"
        },
        "weight": "8",
        "description": "The assignments are programming exercises that allow skills to be demonstrated by solving a more substantial problem than in the weekly exercises.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      },
      {
        "assessment_title": "Assignment Three",
        "type": {
          "label": "Programming Task",
          "value": "programming_task"
        },
        "weight": "18",
        "description": "The assignments are programming exercises that allow skills to be demonstrated by solving a more substantial problem than in the weekly exercises.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      },
      {
        "assessment_title": "Assignment Two",
        "type": {
          "label": "Programming Task",
          "value": "programming_task"
        },
        "weight": "14",
        "description": "The assignments are programming exercises that allow skills to be demonstrated by solving a more substantial problem than in the weekly exercises.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      },
      {
        "assessment_title": "In-class exercises",
        "type": {
          "label": "Participatory task",
          "value": "participatory_task"
        },
        "weight": "16",
        "description": "Each week you will be set a programming task to complete during your workshop class. You will be offered four (4) randomly selected opportunities for your in-class work to be assessed and your mark for this component will be computed using the best three (3) of those attempts. Your work will be checked and marked in workshop class in which it is completed. No late submissions are accepted.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "Session 2-Weekday-North Ryde",
        "individual": {
          "label": "",
          "value": ""
        }
      },
      {
        "assessment_title": "Weekly Tasks",
        "type": {
          "label": "Participatory task",
          "value": "participatory_task"
        },
        "weight": "16",
        "description": "Each week you will be set a task to complete which will be submitted online or checked in a workshop session.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "Session 2-Special",
        "individual": {
          "label": "",
          "value": ""
        }
      }
    ],
    "requisites": [],
    "unit_offering": [
      {
        "publish": "true",
        "name": "",
        "display_name": "Session 2-Weekday-North Ryde",
        "teaching_period": {
          "value": "Session 2"
        },
        "attendance_mode": {
          "value": "Weekday attendance"
        },
        "quota_number": "",
        "study_level": {},
        "academic_item": {
          "value": "COMP2000"
        }
      },
      {
        "publish": "true",
        "name": "",
        "display_name": "Session 2-Special",
        "teaching_period": {
          "value": "Session 2"
        },
        "attendance_mode": {
          "value": "Special circumstances"
        },
        "quota_number": "",
        "study_level": {},
        "academic_item": {
          "value": "COMP2000"
        }
      }
    ],
    "unit_offering_text": "Session 2, Weekday attendance, North Ryde<br />Session 2, Special circumstances<br />",
    "subject_search_title": "COMP2000 - Object-Oriented Programming Practices",
    "status": {
      "label": "Approved",
      "value": "Active"
    },
    "academic_org": {
      "value": "Department of Computing "
    },
    "school": {
      "value": "Faculty of Science and Engineering"
    },
    "credit_points": "10",
    "type": {
      "label": "",
      "value": "non_pace"
    },
    "description": "Object-oriented programming is a key technology for modern computing. This unit bridges the gap between introductory programming and larger multi-person projects by considering the use of object-oriented techniques to produce intermediate sized software. Practical exercises emphasise the importance of programming practices such as appropriate documentation, systematic approaches to debugging and testing, and the use of software development tools. The unit is taught using Java.",
    "search_title": "COMP2000 - Object-Oriented Programming Practices",
    "code": "COMP2000",
    "title": "Object-Oriented Programming Practices",
    "content_type": "Unit",
    "credit_points_header": "10 credit points"
  },
  "creditPoints": 10,
  "description": "Object-oriented programming is a key technology for modern computing. This unit bridges the gap between introductory programming and larger multi-person projects by considering the use of object-oriented techniques to produce intermediate sized software. Practical exercises emphasise the importance of programming practices such as appropriate documentation, systematic approaches to debugging and testing, and the use of software development tools. The unit is taught using Java.",
  "level": "2000",
  "publishedInHandbook": 1,
  "levelDisplay": "Unit",
  "effectiveDate": "2021-01-01T00:00:00",
  "status": "Active",
  "modDate": "2020-10-16T19:25:11.472",
  "code": "COMP2000",
  "title": "Object-Oriented Programming Practices",
  "implementationYear": "2021"
}