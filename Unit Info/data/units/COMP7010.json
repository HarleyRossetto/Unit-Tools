{
  "data": {
    "grading_schema": {
      "label": "Graded",
      "value": "graded"
    },
    "study_level": {},
    "quota_enrolment_requirements": "",
    "exclusions": "",
    "level": {
      "value": "7000"
    },
    "uac_code": "",
    "special_requirements": "",
    "special_unit_type": [
      {
        "label": "Research Master",
        "value": "research_master"
      }
    ],
    "version_status": {
      "label": "Approved",
      "value": "Active"
    },
    "special_topic": false,
    "asced_broad": {
      "value": ""
    },
    "placement_proportion": {
      "label": "No",
      "value": "no"
    },
    "unit_description": [],
    "unit_learning_outcomes": [
      {
        "description": "<div>\n<div>Research a topic in advanced computer science and report findings in written and oral form.</div>\n</div>",
        "code": "ULO3"
      },
      {
        "description": "<div>\n<div>Understand, specify, analyse and evaluate the meaning of programming languages and programs using mathematical techniques.</div>\n</div>",
        "code": "ULO1"
      },
      {
        "description": "<div>\n<div>Apply a practical tool or system to specify and prove formal properties of programming languages and programs.</div>\n</div>",
        "code": "ULO2"
      }
    ],
    "non_scheduled_learning_activities": [
      {
        "description": "Reading the provided textbook, notes, and other materials.",
        "activity": {
          "label": "Readings",
          "value": "readings"
        },
        "offerings": ""
      }
    ],
    "enrolment_rules": [
      {
        "description": "COMP782",
        "type": {
          "label": "NCCW (pre-2020 units)",
          "value": "nccw"
        }
      },
      {
        "description": "Admission to MRes",
        "type": {
          "label": "Pre-requisite",
          "value": "prerequisite"
        }
      }
    ],
    "assessments": [
      {
        "assessment_title": "Weekly Homework",
        "type": {
          "label": "Programming Task",
          "value": "programming_task"
        },
        "weight": "20",
        "description": "Each week students will be asked to complete some practical exercises based on the class material of that week. This mark will be allocated on the basis of the correctness and style of the submitted exercise solutions with reference to the difficulty of the questions.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      },
      {
        "assessment_title": "Research Presentation",
        "type": {
          "label": "Presentation",
          "value": "presentation"
        },
        "weight": "20",
        "description": "A presentation on the topic of the research report. Presentations will be thirty minutes long, including five minutes for questions, and will be held in class in Week 13. The presentation will be assessed on the basis of the form in which you present the information from your report, the clarity of your explanations, and the way in which you respond to questions from the audience.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      },
      {
        "assessment_title": "Final Examination",
        "type": {
          "label": "Examination",
          "value": "exam"
        },
        "weight": "30",
        "description": "In the final examination period, students will be given a week to undertake a non-trivial software formalisation and proof task using the tool(s) studied in this unit. The mark for this assessment will be determined as for the weekly homework with the total mark for the exam determined by combining the individual question marks according to the weights specified in the exam paper.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      },
      {
        "assessment_title": "Research Report",
        "type": {
          "label": "Report",
          "value": "report"
        },
        "weight": "30",
        "description": "Students will be asked to investigate a theorem prover, proof assistant, software verification system or model checker other than the one being used in the practical work of this unit. A report must be written that describes the system that has been investigated, illustrates an example verification or proof with that system, and compares the strengths and weaknesses of the system to the system used in this unit. The report will be assessed on the basis of the understandability and correctness of the descriptions and coverage of the above points.",
        "applies_to_all_offerings": "No",
        "hurdle_task": "No",
        "offerings": "",
        "individual": {
          "label": "",
          "value": ""
        }
      }
    ],
    "requisites": [],
    "unit_offering": [
      {
        "publish": "true",
        "name": "COMP7010-unit_teaching_period-Weekday-subject",
        "display_name": "Session 1-Weekday-North Ryde",
        "teaching_period": {
          "value": "Session 1"
        },
        "attendance_mode": {
          "value": "Weekday attendance"
        },
        "quota_number": "",
        "study_level": {},
        "academic_item": {
          "value": "COMP7010"
        }
      },
      {
        "publish": "true",
        "name": "COMP7010-unit_teaching_period-Special",
        "display_name": "Session 1-Special",
        "teaching_period": {
          "value": "Session 1"
        },
        "attendance_mode": {
          "value": "Special circumstances"
        },
        "quota_number": "",
        "study_level": {},
        "academic_item": {
          "value": "COMP7010"
        }
      }
    ],
    "unit_offering_text": "Session 1, Weekday attendance, North Ryde<br />Session 1, Special circumstances<br />",
    "subject_search_title": "COMP7010 - Advanced Topics in Theory and Practice of Software",
    "status": {
      "label": "Approved",
      "value": "Active"
    },
    "academic_org": {
      "value": "Department of Computing "
    },
    "school": {
      "value": "Faculty of Science and Engineering"
    },
    "credit_points": "10",
    "type": {
      "label": "",
      "value": "non_pace"
    },
    "description": "This unit introduces the formal study of software systems. It is intended to provide a general basis for further study or research in software-focused areas of Computer Science such as Programming Languages and Formal Methods. The unit is organised around two main themes: a) the meaning of languages and programs, and b) techniques for verifying that languages and programs have desired properties. The practical work in the unit includes implementation of formal language semantics and development of verification proofs.",
    "search_title": "COMP7010 - Advanced Topics in Theory and Practice of Software",
    "code": "COMP7010",
    "title": "Advanced Topics in Theory and Practice of Software",
    "content_type": "Unit",
    "credit_points_header": "10 credit points"
  },
  "creditPoints": 10,
  "description": "This unit introduces the formal study of software systems. It is intended to provide a general basis for further study or research in software-focused areas of Computer Science such as Programming Languages and Formal Methods. The unit is organised around two main themes: a) the meaning of languages and programs, and b) techniques for verifying that languages and programs have desired properties. The practical work in the unit includes implementation of formal language semantics and development of verification proofs.",
  "level": "7000",
  "publishedInHandbook": 1,
  "levelDisplay": "Unit",
  "effectiveDate": "2021-01-01T00:00:00",
  "status": "Active",
  "modDate": "2020-12-07T11:26:43.767",
  "code": "COMP7010",
  "title": "Advanced Topics in Theory and Practice of Software",
  "implementationYear": "2021"
}